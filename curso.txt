9:35 -> 9:45 LEITURA ARTIGO
9:45 -> CURSO

git tag: shows releases
git diff vX.Y: shows changes log
git blame filename.extension: shows info about the commits (what, when, who)
git clone: clones repository into folder
git checkout: change repository version
git ls-files: show tracked files
git status: shows untracked files
git add: track file
git commit: save modifications
git init: starts a repository
git log: commits history
git whatchanged: shows git log + what files have been modified
git whatchanged -p: shows git whatchanged + what have been modified inside the files
git remote add: adds a remote repository
git push: syncs local repository to remote repository
git pull: syncs remote repository to local repository
git branch: shows branch list
git branch *branch_name*: creates a branch
git branch -d *branch_name*: deletes a branch
git branch -r *branch_name*: lists remote branches
git branch -a *branch_name*: lists all branches
git push -u origin *branch_name*: creates a remote branch and link it to the local one
git push -d origin *branch_name*: removes remote branch
git push -u origin master: sync branches to push
git checkout *branch_name*: switches between branches
git checkout -b *branch_name*: creates a branch n switches to it
git checkout -t origin/*branch_name*: creates and links local and remote branches and switches to the new branch
git fetch origin: list all modifications on a repository
git merge *branch_name*: merges commits from *branch_name* to current branch
git rebase *branch_origin* *branch_target*: updates a branch based on another

AULA 05 <-> REVISAR



working directory -> repository status
index/staging area -> pre-vision of the modifications that we want to define to the project
HEAD -> last step of the project
no branch -> temp branch to solve conflicts