git tag: shows releases
git diff vX.Y: shows changes log
git blame filename.extension: shows info about the commits (what, when, who)
git clone: clones repository into folder
git checkout: change repository version
git ls-files: show tracked files
git status: shows untracked files
git add: track file
git commit: save modifications
git init: starts a repository
git log: commits history
git whatchanged: shows git log + what files have been modified
git whatchanged -p: shows git whatchanged + what have been modified inside the files
git remote add: adds a remote repository
git push: syncs local repository to remote repository
git pull: syncs remote repository to local repository
git branch: show branch list
git branch *branch_name*: create a branch
git branch -d *branch_name*: delete a branch
git branch -r *branch_name*: list remote branches
git branch -a *branch_name*: list all branches
git push -u origin *branch_name*: create a remote branch and link it to the local one
git push -d origin *branch_name*: remove remote branch
git push -u origin master: sync branches to push
git checkout *branch_name*: switch between branches
git checkout -b *branch_name*: create a branch n switches to it
git checkout -t origin/*branch_name*: create and links local and remote branches and switches to the new branch
git fetch origin: list all modifications on a repository
git merge *branch_name*: merge commits from *branch_name* to current branch
git rebase *branch_origin* *branch_target*: update a branch based on another
git checkout -- *file_name*: undo untracked modification
git reset HEAD *file_name*: undo last modification on file status
git reset *commit_hash*: undo commit
git revert *commit_hash*: revert commit changes
git stash: save uncommited changes
git stash list: show stashs
git stash pop: recover last item on stash list
git stash apply *stash_number*: recover stash from number
git stash drop: delete stash
git bisect start: start seek for what you want
git bisect bad *commit_hash*: commit unrelated to what you want
git bisect good *commit_hash*: commit related to what you want
git pull: att master branch
git rebase master *branch_name*: 
vim ~/.gitconfig: edit gitconfig file
ALWAYS MAKE BRANCHES TO WORK ON

AULA 05 <-> REVISAR



working directory -> repository status
index/staging area -> pre-vision of the modifications that we want to define to the project
HEAD -> last step of the project
no branch -> temp branch to solve conflicts

